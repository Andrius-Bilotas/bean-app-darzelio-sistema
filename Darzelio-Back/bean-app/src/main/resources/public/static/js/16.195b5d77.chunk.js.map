{"version":3,"sources":["Components/Utilities/LogsService.jsx","Components/Logs/UserLogsList.jsx"],"names":["pageNumber","email","sortByDate","http","get","UserLogsList","props","componentDidMount","retrieveUsersLogsList","state","searchEmail","LogsService","getAll","then","res","setState","logs","data","totalPages","totalLogs","catch","err","onChange","event","target","value","handlePageChange","handleSortByDate","preventDefault","rowNumber","this","className","type","placeholder","name","scope","onClick","length","map","index","id","user","role","action","date","key","Pagination","count","page","siblingCount","boundaryCount","variant","shape","Component"],"mappings":"yOA4Be,M,+FAxBNA,EAAYC,EAAOC,GACxB,OAAOC,IAAKC,IAAL,+BAAiCJ,EAAjC,mBAAsDE,EAAtD,kBAA0ED,M,iCAGxED,EAAYE,GACrB,OAAOC,IAAKC,IAAL,gCACoBJ,EADpB,mBACyCE,M,oCAIpCF,GACZ,OAAOG,IAAKC,IAAL,gCACoBJ,EADpB,sB,qCAKMA,GACb,OAAOG,IAAKC,IAAL,gCACoBJ,EADpB,yB,MCfUK,G,8DACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAWRC,kBAAoB,WAClB,EAAKC,yBAbY,EAgBnBA,sBAAwB,WAAO,IAAD,EACoB,EAAKC,MAA7CT,EADoB,EACpBA,WAAYU,EADQ,EACRA,YAAaR,EADL,EACKA,WAEjCS,EAAYC,OAAOZ,EAAYU,EAAaR,GACzCW,MAAK,SAACC,GACL,EAAKC,SAAS,CACZC,KAAMF,EAAIG,KAAKD,KACfE,WAAYJ,EAAIG,KAAKC,WACrBC,UAAWL,EAAIG,KAAKE,eAIzBC,OAAM,SAACC,QA5BS,EA8BnBC,SAAW,SAACC,GACV,IAAMb,EAAca,EAAMC,OAAOC,MACjC,EAAKV,SACH,CACEL,YAAaA,IAEf,WACE,EAAKF,4BArCQ,EA0CnBkB,iBAAmB,SAACH,EAAOE,GACzB,EAAKV,SACH,CACEf,WAAYyB,IAEd,WACE,EAAKjB,4BAhDQ,EAoDnBmB,iBAAmB,SAACJ,GAClBA,EAAMK,iBAEsB,aAA1B,EAAKnB,MAAMP,WACP,EAAKa,SACH,CACEb,WAAY,YAEd,WACE,EAAKM,2BAGT,EAAKO,SACH,CACEb,WAAY,aAEd,WACE,EAAKM,4BAnEf,EAAKC,MAAQ,CACXO,KAAM,GACNhB,WAAY,EACZkB,WAAY,EACZC,UAAW,EACXT,YAAa,GACbR,WAAY,YARG,E,qDA4EjB,IAAI2B,EAAY,GAAKC,KAAKrB,MAAMT,WAAa,GAC7C,OACE,yBAAK+B,UAAU,kBACb,yBAAKA,UAAU,QACb,+EAEF,yBAAKA,UAAU,QAEX,2BACEC,KAAK,OACLD,UAAU,0BACVE,YAAY,kDACZC,KAAK,cACLT,MAAOK,KAAKrB,MAAMC,YAClBY,SAAUQ,KAAKR,YAIrB,2BAAOS,UAAU,cACf,+BACE,4BACE,wBAAII,MAAM,OAAV,KACA,wBAAIA,MAAM,OAAV,cACA,wBAAIA,MAAM,OAAV,aACA,wBAAIA,MAAM,OAAV,YACA,wBACEA,MAAM,MACNC,QAASN,KAAKH,iBACdI,UAAU,YAHZ,oBASJ,+BACGD,KAAKrB,MAAMO,MAAQc,KAAKrB,MAAMO,KAAKqB,OAAS,EAC3CP,KAAKrB,MAAMO,KAAKsB,KAAI,WAAmCC,GAAW,IAA3CC,EAA0C,EAA1CA,GAAIC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,KAC7C,OACE,wBAAIC,IAAKL,GACP,wBAAIL,MAAM,OAAON,KAEjB,4BAAKY,GACL,4BAAKC,GACL,4BAAKC,GACL,4BAAKC,OAKX,4BACE,sCAKR,kBAACE,EAAA,EAAD,CACEf,UAAU,OACVgB,MAAOjB,KAAKrB,MAAMS,WAClB8B,KAAMlB,KAAKrB,MAAMT,WACjBiD,aAAc,EACdC,cAAe,EACfC,QAAQ,WACRC,MAAM,UACN9B,SAAUQ,KAAKJ,wB,GA5IiB2B","file":"static/js/16.195b5d77.chunk.js","sourcesContent":["import http from './http-common';\r\n\r\nclass LogsService {\r\n  //rusiuoja pagal nutylejima pagal data zemyn\r\n  getAll(pageNumber, email, sortByDate) {\r\n    return http.get(`/api/users/logs?page=${pageNumber}&sortby=${sortByDate}&email=${email}`);\r\n  }\r\n\r\n  sortByDate(pageNumber, sortByDate) {\r\n    return http.get(\r\n      ` /api/users/logs?page=${pageNumber}&sortby=${sortByDate}`\r\n    );\r\n  }\r\n  //tas pats\r\n  sortByDateAsc(pageNumber) {\r\n    return http.get(\r\n      ` /api/users/logs?page=${pageNumber}&sortby=dateasc`\r\n    );\r\n  }\r\n\r\n  sortByDateDesc(pageNumber) {\r\n    return http.get(\r\n      ` /api/users/logs?page=${pageNumber}&sortby=datedesc`\r\n    );\r\n  }\r\n\r\n\r\n}\r\nexport default new LogsService();\r\n","import React, { Component } from 'react';\r\nimport { Pagination } from '@material-ui/lab';\r\nimport LogsService from '../Utilities/LogsService';\r\nimport '../../Style/UsersLandings.css';\r\nimport '../../Style/style.css';\r\n\r\nexport default class UserLogsList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      logs: [],\r\n      pageNumber: 1,\r\n      totalPages: 0,\r\n      totalLogs: 0,\r\n      searchEmail: '',\r\n      sortByDate: 'datedesc',\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.retrieveUsersLogsList();\r\n  };\r\n\r\n  retrieveUsersLogsList = () => {\r\n    const { pageNumber, searchEmail, sortByDate } = this.state;\r\n\r\n    LogsService.getAll(pageNumber, searchEmail, sortByDate)\r\n      .then((res) => {\r\n        this.setState({\r\n          logs: res.data.logs,\r\n          totalPages: res.data.totalPages,\r\n          totalLogs: res.data.totalLogs,\r\n        });\r\n      })\r\n    // .catch((err) => console.log(err));\r\n    .catch((err) =>  {});\r\n  };\r\n  onChange = (event) => {\r\n    const searchEmail = event.target.value;\r\n    this.setState(\r\n      {\r\n        searchEmail: searchEmail,\r\n      },\r\n      () => {\r\n        this.retrieveUsersLogsList();\r\n      }\r\n    );\r\n  };\r\n\r\n  handlePageChange = (event, value) => {\r\n    this.setState(\r\n      {\r\n        pageNumber: value,\r\n      },\r\n      () => {\r\n        this.retrieveUsersLogsList();\r\n      }\r\n    );\r\n  };\r\n  handleSortByDate = (event) => {\r\n    event.preventDefault();\r\n    \r\n      this.state.sortByDate === 'datedesc'\r\n        ? this.setState(\r\n            {\r\n              sortByDate: 'dateasc',\r\n            },\r\n            () => {\r\n              this.retrieveUsersLogsList();\r\n            }\r\n          )\r\n        : this.setState(\r\n            {\r\n              sortByDate: 'datedesc',\r\n            },\r\n            () => {\r\n              this.retrieveUsersLogsList();\r\n            }\r\n          );\r\n    \r\n  };\r\n\r\n  render() {\r\n    let rowNumber = 20 * this.state.pageNumber - 19;\r\n    return (\r\n      <div className=\"container mt-5\">\r\n        <div className=\"mb-4\">\r\n          <h4> Vartotojų įvykių žurnalas</h4>\r\n        </div>\r\n        <div className=\"mb-4\">\r\n         \r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control mt-3 col-4\"\r\n              placeholder=\"Ieškoti pagal vartotojo el.paštą\"\r\n              name=\"searchEmail\"\r\n              value={this.state.searchEmail}\r\n              onChange={this.onChange}\r\n            />\r\n      \r\n        </div>\r\n        <table className=\"table mt-4\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">#</th>\r\n              <th scope=\"col\">Vartotojas</th>\r\n              <th scope=\"col\">Rolė</th>\r\n              <th scope=\"col\">Veiksmas</th>\r\n              <th\r\n                scope=\"col\"\r\n                onClick={this.handleSortByDate}\r\n                className=\"dateTime\"\r\n              >\r\n                Data ir laikas\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.state.logs && this.state.logs.length > 0 ? (\r\n              this.state.logs.map(({ id, user, role, action, date }, index) => {\r\n                return (\r\n                  <tr key={id}>\r\n                    <th scope=\"row\">{rowNumber++}</th>\r\n                    {/* <th scope=\"row\">{index + 1}</th> */}\r\n                    <td>{user}</td>\r\n                    <td>{role}</td>\r\n                    <td>{action}</td>\r\n                    <td>{date}</td>\r\n                  </tr>\r\n                );\r\n              })\r\n            ) : (\r\n              <tr>\r\n                <td>...</td>\r\n              </tr>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n        <Pagination\r\n          className=\"my-3\"\r\n          count={this.state.totalPages}\r\n          page={this.state.pageNumber}\r\n          siblingCount={1}\r\n          boundaryCount={1}\r\n          variant=\"outlined\"\r\n          shape=\"rounded\"\r\n          onChange={this.handlePageChange}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}